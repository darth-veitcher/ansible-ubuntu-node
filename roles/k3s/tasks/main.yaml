---
# file: roles/k3s/tasks/main.yaml
# Installs lightweight kubernetes (K3s)
# https://www.k3s.io
# TODO: replace references to `master_node` with `k3s_cluster_url`

# Internal Variable
- name: initialise list of configured nodes
  set_fact:
    configured_nodes: []
  tags: k3s

# Firewall
- name: install ufw profile for k3s
  template: >
            src=templates/ufw/k3s.conf.j2
            dest=/etc/ufw/applications.d/k3s owner=root group=root mode=0644
  tags: firewall, k3s

- name: update ufw knowledge of k3s app profile
  shell: ufw app update k3s
  tags: firewall, k3s

- name: allow access from {{ CIDR }} and localhost to k3s
  ufw:
    rule: allow
    name: k3s
    src: "{{ item }}"
  loop:
    - 127.0.0.1
    - "{{ CIDR }}"
  tags: firewall, k3s

# K3s installation
- name: get static hostname (used by kubernetes to identify node)
  shell: hostnamectl --static
  register: static_hostname
  tags: k3s

- name: Point hostname to localhost (k3s requirement)
  lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{static_hostname.stdout}}"
  tags: k3s

- name: find {{deploy_user_name}} $HOME directory
  shell: cat /etc/passwd | grep {{deploy_user_name}} | cut -d":" -f6
  register: user_home
  tags: k3s

- name: ensure {{user_home.stdout}}/.kube exists and is owned by {{deploy_user_name}}
  file:
    path: "{{user_home.stdout}}/.kube"
    state: directory
    owner: "{{deploy_user_name}}"
    group: "{{deploy_user_name}}"
  tags: k3s

# Remove previous installs
- include: clean-install.yaml
  when: clean_install is not defined or clean_install|bool is not false
  tags: k3s

# Initialise Cluster
- include: init-cluster.yaml
  when: master_node is not defined or master_node == ansible_default_ipv4.address or master_node == ansible_fqdn
  tags: k3s, cluster

- name: list configured nodes
  debug: var=configured_nodes
  tags: k3s, cluster

# Firewall
- name: allow kubernetes interfaces
  ufw:
    rule: allow
    name: k3s
    interface: "{{ item }}"
    direction: in
  tags: firewall, k3s
  loop:
    - cni0
    - kube-bridge

# Temporarily allow 0.0.0.0/0 to connect to 6443
- name: allow access from 0.0.0.0/0 to k3s
  ufw:
    rule: allow
    name: k3s
    src: 0.0.0.0/0

# Join existing cluster
- include: join-cluster.yaml
  when: k3s_server_address is defined and ansible_default_ipv4.address not in configured_nodes
  tags: k3s, cluster

# VPN
- include: wireguard.yaml
  when: use_wireguard is defined and use_wireguard|bool
  tags: wireguard, k3s

- include: kilo.yaml
  when: use_wireguard is defined and use_wireguard|bool
  run_once: yes
  tags: k3s, kilo

# Disable temporary rule
- name: disable access from 0.0.0.0/0 to k3s
  ufw:
    rule: allow
    name: k3s
    src: 0.0.0.0/0
    delete: yes